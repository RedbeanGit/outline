{{- $hostname := .Values.ingress.hostname | required ".Values.ingress.hostname is required." -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "outline.fullname" . }}
  labels:
    {{- include "outline.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "outline.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "outline.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "outline.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NODE_ENV
              value: production
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "outline.secretName" . }}
                  key: {{ .Values.secretKeys.secretKey }}
            - name: UTILS_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "outline.secretName" . }}
                  key: {{ .Values.secretKeys.utilsSecretKey }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "outline.databaseUrlSecretName" . }}
                  key: database-url
            - name: DATABASE_CONNECTION_POOL_MIN
              value: {{ .Values.databaseConnectionPoolMin | quote }}
            - name: DATABASE_CONNECTION_POOL_MAX
              value: {{ .Values.databaseConnectionPoolMax | quote }}
            - name: PGSSLMODE
              value: "disable"
            - name: REDIS_URL
              value: {{ include "outline.redisUrl" . }}
            - name: URL
              value: {{ printf "%s://%s" (ternary "https" "http" .Values.ingress.tls) $hostname }}
            - name: PORT
              value: "3000"
            - name: COLLABORATION_URL
              value: {{ .Values.collaborationServerUrl | quote }}
            - name: FILE_STORAGE
              value: "s3"
            - name: FILE_STORAGE_UPLOAD_MAX_SIZE
              value: {{ .Values.fileStorageUploadMaxSize | quote }}
            - name: FILE_STORAGE_WORKSPACE_IMPORT_MAX_SIZE
              value: {{ .Values.fileStorageWorkspaceImportMaxSize | quote }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "outline.minio.secretName" . }}
                  key: "root-user"
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "outline.minio.secretName" . }}
                  key: "root-password"
            - name: AWS_REGION
              value: ""
            - name: AWS_S3_UPLOAD_BUCKET_URL
              value: {{ include "outline.minioUrl" . }}
            - name: AWS_S3_UPLOAD_BUCKET_NAME
              value: {{ .Values.fileStorageBucketName | quote }}
            - name: AWS_S3_FORCE_PATH_STYLE
              value: "true"
            - name: AWS_S3_ACL
              value: "private"
            - name: FORCE_HTTPS
              value: "false"
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "outline.google.secretName" . }}
                  key: {{ .Values.auth.google.secretKeys.clientId | quote }}
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "outline.google.secretName" . }}
                  key: {{ .Values.auth.google.secretKeys.clientSecret | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
